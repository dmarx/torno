# .github/workflows/test.yml
name: Tests

on:
  push:
    #branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    #branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11']
        #python-version: ['3.8', '3.9', '3.10', '3.11']
        #os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch
        pip install .[test]

    # pytest --cov=torno --cov-report=xml
    - name: Run tests
      run: |
        # pytest -v

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     file: ./coverage.xml
    #     flags: unittests
    #     name: codecov-umbrella
    #     fail_ci_if_error: false

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch
        pip install .[dev]

    - name: Run black
      run: black .

    - name: Run isort
      run: isort .

    - name: Run mypy
      run: mypy src/torno

    - name: Run ruff
      run: ruff check .

  # Required check that ensures all other checks passed
  test-status:
    name: Test Status
    if: always()
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
